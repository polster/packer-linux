# Tell the system to perform a fresh install
install
# Installation fomr CD
cdrom
# Perform kickstart installation in text form
text

# Accept EULA
eula --agreed

# System language
lang en_US.UTF-8
# Keyboard layout: Swiss German
keyboard sg
# Time
timezone Europe/Zurich

# Disable the firewall as this should be configured later
firewall --disabled
# Network config
network --bootproto=dhcp --onboot=on

# System authorization information
authconfig --enableshadow --passalgo=sha512
# The encrypted root password
rootpw --iscrypted $6$dtuXtAR67GFYMFai$XpBHyCjKC5QiX5A0whJmGpjcckMsCk/9UtBXzh44NhRsS7uCmSjBwpNpS9hd0g51IudSUrp75FFWGKbEjOseR.

# Enable SELinux
selinux --enforcing

# Bootloader config
# Disable usage of predictable network interface names (keep classic ethX naming)
bootloader --location=mbr --boot-drive=sda --append="net.ifnames=0 biosdevname=0"

# Service config
services --disabled="sendmail,postfix" --enabled="NetworkManager,sshd,ntpd,ntpdate"

# Set system log level
logging --level=info

# Partion clearing
clearpart --all --drives=sda
ignoredisk --only-use=sda
# Partitioning
autopart

auth  --useshadow  --enablemd5
firstboot --disabled

# Eject CD and reboot the system after the installation is complete.
reboot --eject

%packages --ignoremissing

@Base
@Core

# not needed as we are not using predictable network interface naming
-biosdevname

# packages we must have
libselinux-python
net-tools
wget
rsync
tree

%end

%post --log=/var/ks-post.log
#!/bin/bash

# yum
mkdir -p /etc/yum/vars
echo 7.2.1511 > /etc/yum/vars/releasever

# udev
rm -f /etc/udev/rules.d/70-persistent-net.rules
ln -s /dev/null /etc/udev/rules.d/70-persistent-net.rules

# perform package update
yum update -y

echo "Creating the vagrant user"
# create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo umask 022 >> /home/vagrant/.bashrc
echo vagrant:vagrant | chpasswd

# configure sudo for the vagrant user
echo "Configuring the vagrant user for sudo"
echo "vagrant        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

# ensure ifcfg-eth0 is configured accordingly
rm -f /etc/sysconfig/network-scripts/ifcfg-e*
rm -f /etc/sysconfig/network-scripts/ifcfg-p*p*
cat <<EOS > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
TYPE=Ethernet
BOOTPROTO=dhcp
ONBOOT=yes
EOS

%end
